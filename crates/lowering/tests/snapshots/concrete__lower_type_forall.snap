---
source: crates/lowering/tests/concrete.rs
expression: "&lower.source_map"
snapshot_kind: text
---
SourceMap {
    types: {
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeConstructor,
                range: 42..48,
            },
        }: Constructor {
            qualifier: None,
            name: Some(
                "KindC",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeConstructor,
                range: 56..62,
            },
        }: Constructor {
            qualifier: None,
            name: Some(
                "KindD",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeVariable,
                range: 64..66,
            },
        }: Variable {
            name: Some(
                "a",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeVariable,
                range: 69..71,
            },
        }: Variable {
            name: Some(
                "b",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeVariable,
                range: 74..76,
            },
        }: Variable {
            name: Some(
                "c",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeVariable,
                range: 79..81,
            },
        }: Variable {
            name: Some(
                "d",
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeArrow,
                range: 74..81,
            },
        }: Arrow {
            domain: Some(
                Id<syntax::cst::Type>(4),
            ),
            codomain: Some(
                Id<syntax::cst::Type>(5),
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeArrow,
                range: 69..81,
            },
        }: Arrow {
            domain: Some(
                Id<syntax::cst::Type>(3),
            ),
            codomain: Some(
                Id<syntax::cst::Type>(6),
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeArrow,
                range: 64..81,
            },
        }: Arrow {
            domain: Some(
                Id<syntax::cst::Type>(2),
            ),
            codomain: Some(
                Id<syntax::cst::Type>(7),
            ),
        },
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeForall,
                range: 24..81,
            },
        }: Forall {
            bindings: [
                TypeVariableBinding {
                    visible: false,
                    name: Some(
                        "a",
                    ),
                    kind: None,
                },
                TypeVariableBinding {
                    visible: true,
                    name: Some(
                        "b",
                    ),
                    kind: None,
                },
                TypeVariableBinding {
                    visible: false,
                    name: Some(
                        "c",
                    ),
                    kind: Some(
                        Id<syntax::cst::Type>(0),
                    ),
                },
                TypeVariableBinding {
                    visible: true,
                    name: Some(
                        "d",
                    ),
                    kind: Some(
                        Id<syntax::cst::Type>(1),
                    ),
                },
            ],
            type: Some(
                Id<syntax::cst::Type>(8),
            ),
        },
    },
    binders: {},
    expressions: {},
    let_bindings: {},
    let_bindings_grouped: [],
    do_statements: {},
}
