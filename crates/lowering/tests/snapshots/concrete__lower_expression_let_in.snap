---
source: crates/lowering/tests/concrete.rs
expression: "&lower.source_map"
snapshot_kind: text
---
SourceMap {
    types: {
        AstPtr {
            raw: SyntaxNodePtr {
                kind: TypeConstructor,
                range: 44..48,
            },
        }: Constructor,
    },
    binders: {
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BinderInteger,
                range: 62..70,
            },
        }: Integer,
    },
    expressions: {
        AstPtr {
            raw: SyntaxNodePtr {
                kind: ExpressionInteger,
                range: 59..62,
            },
        }: Integer,
        AstPtr {
            raw: SyntaxNodePtr {
                kind: ExpressionVariable,
                range: 72..78,
            },
        }: Variable,
        AstPtr {
            raw: SyntaxNodePtr {
                kind: ExpressionInteger,
                range: 104..107,
            },
        }: Integer,
        AstPtr {
            raw: SyntaxNodePtr {
                kind: ExpressionVariable,
                range: 113..122,
            },
        }: Variable,
        AstPtr {
            raw: SyntaxNodePtr {
                kind: ExpressionLetIn,
                range: 26..122,
            },
        }: LetIn {
            bindings: [
                Id<syntax::cst::LetBinding>(0),
                Id<syntax::cst::LetBinding>(1),
                Id<syntax::cst::LetBinding>(3),
            ],
            expression: Some(
                Id<syntax::cst::Expression>(3),
            ),
        },
    },
    let_bindings: {
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LetBindingSignature,
                range: 32..48,
            },
        }: Id<lowering::concrete::LetBindingKind>(0),
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LetBindingEquation,
                range: 48..62,
            },
        }: Id<lowering::concrete::LetBindingKind>(0),
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LetBindingEquation,
                range: 90..107,
            },
        }: Id<lowering::concrete::LetBindingKind>(1),
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LetBindingPattern,
                range: 62..107,
            },
        }: Id<lowering::concrete::LetBindingKind>(2),
    },
    let_bindings_grouped: [
        Value {
            name: Some(
                "life",
            ),
            signature: Some(
                Id<syntax::cst::Type>(0),
            ),
            equations: [
                LoweredEquation {
                    binders: [],
                    guarded: Some(
                        Unconditional {
                            where_expression: Some(
                                WhereExpression {
                                    expression: Some(
                                        Id<syntax::cst::Expression>(0),
                                    ),
                                    bindings: [],
                                },
                            ),
                        },
                    ),
                },
            ],
        },
        Value {
            name: Some(
                "value",
            ),
            signature: None,
            equations: [
                LoweredEquation {
                    binders: [],
                    guarded: Some(
                        Unconditional {
                            where_expression: Some(
                                WhereExpression {
                                    expression: Some(
                                        Id<syntax::cst::Expression>(2),
                                    ),
                                    bindings: [],
                                },
                            ),
                        },
                    ),
                },
            ],
        },
        Pattern {
            pattern: Some(
                Id<syntax::cst::Binder>(0),
            ),
            expression: Some(
                Id<syntax::cst::Expression>(1),
            ),
            bindings: [
                Id<syntax::cst::LetBinding>(2),
            ],
        },
    ],
}
