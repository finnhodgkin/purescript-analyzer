---
source: crates/parsing/tests/parser.rs
expression: "(node, errors)"
snapshot_kind: text
---
(
    Module@0..64
      ModuleHeader@0..28
        MODULE@0..6 "module"
        Comment@6..7
          WHITESPACE@6..7 " "
        ModuleName@7..21
          UPPER@7..20 "TypeRoleError"
          Comment@20..21
            WHITESPACE@20..21 " "
        ModuleExportList@21..21
        WHERE@21..26 "where"
        Comment@26..28
          WHITESPACE@26..28 "\n\n"
      LAYOUT_START@28..28 ""
      ModuleImports@28..28
      ModuleStatements@28..64
        TypeRoleDeclaration@28..64
          TYPE@28..32 "type"
          Comment@32..33
            WHITESPACE@32..33 " "
          ROLE@33..37 "role"
          Comment@37..38
            WHITESPACE@37..38 " "
          UPPER@38..43 "Error"
          Comment@43..44
            WHITESPACE@43..44 " "
          ERROR@44..46
            ERROR@44..44 ""
            INTEGER@44..45 "1"
            Comment@45..46
              WHITESPACE@45..46 " "
          TypeRole@46..54
            NOMINAL@46..53 "nominal"
            Comment@53..54
              WHITESPACE@53..54 " "
          TypeRole@54..62
            PHANTOM@54..61 "phantom"
            Comment@61..62
              WHITESPACE@61..62 " "
          ERROR@62..64
            ERROR@62..62 ""
            INTEGER@62..63 "2"
            Comment@63..64
              WHITESPACE@63..64 "\n"
      LAYOUT_END@64..64 ""
      END_OF_FILE@64..64 ""
    ,
    [
        ParseError {
            position: Position {
                offset: 44,
                line: 3,
                column: 17,
            },
            message: "Invalid token",
        },
        ParseError {
            position: Position {
                offset: 62,
                line: 3,
                column: 35,
            },
            message: "Invalid token",
        },
    ],
)
