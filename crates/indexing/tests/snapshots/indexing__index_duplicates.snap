---
source: crates/indexing/tests/indexing.rs
expression: snapshot
snapshot_kind: text
---
Index {
    term_item: Arena {
        len: 11,
        data: [
            Value {
                signature: Some(
                    Idx::<ValueSignature>>(0),
                ),
                equations: [],
            },
            Constructor {
                id: Idx::<DataConstructor>>(0),
            },
            Constructor {
                id: Idx::<DataConstructor>>(1),
            },
            Constructor {
                id: Idx::<DataConstructor>>(4),
            },
            ClassMember {
                id: Idx::<ClassMemberStatement>>(0),
            },
            Instance {
                id: Idx::<InstanceDeclaration>>(0),
            },
            Instance {
                id: Idx::<InstanceDeclaration>>(1),
            },
            Derive {
                id: Idx::<DeriveDeclaration>>(0),
            },
            Derive {
                id: Idx::<DeriveDeclaration>>(1),
            },
            Foreign {
                id: Idx::<ForeignImportValueDeclaration>>(0),
            },
            Operator {
                id: Idx::<InfixDeclaration>>(0),
            },
        ],
    },
    type_item: Arena {
        len: 5,
        data: [
            Data {
                signature: None,
                equation: Some(
                    Idx::<DataEquation>>(0),
                ),
                role: None,
            },
            Newtype {
                signature: None,
                equation: Some(
                    Idx::<NewtypeEquation>>(0),
                ),
                role: None,
            },
            Class {
                signature: None,
                declaration: Some(
                    Idx::<ClassDeclaration>>(0),
                ),
            },
            Foreign {
                id: Idx::<ForeignImportDataDeclaration>>(0),
            },
            Operator {
                id: Idx::<InfixDeclaration>>(2),
            },
        ],
    },
    term_export: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<indexing::index::TermItem>>,
    },
    type_export: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<indexing::index::TypeItem>>,
    },
    alias_nominal: {},
    term_nominal: {
        "+": Idx::<TermItem>(10),
        "unit": Idx::<TermItem>(9),
        "eqId": Idx::<TermItem>(8),
        "eq": Idx::<TermItem>(4),
        "id": Idx::<TermItem>(0),
        "Just": Idx::<TermItem>(1),
        "Id": Idx::<TermItem>(3),
        "Nothing": Idx::<TermItem>(2),
        "eqInt": Idx::<TermItem>(6),
    },
    type_nominal: {
        "Unit": Idx::<TypeItem>(3),
        "Eq": Idx::<TypeItem>(2),
        "Id": Idx::<TypeItem>(1),
        "Maybe": Idx::<TypeItem>(0),
        "+": Idx::<TypeItem>(4),
    },
}
Relational {
    data: [
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(1),
        ),
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(2),
        ),
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(1),
        ),
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(2),
        ),
        (
            Idx::<TypeItem>(1),
            Idx::<TermItem>(3),
        ),
        (
            Idx::<TypeItem>(1),
            Idx::<TermItem>(3),
        ),
    ],
    class: [
        (
            Idx::<TypeItem>(2),
            Idx::<TermItem>(4),
        ),
        (
            Idx::<TypeItem>(2),
            Idx::<TermItem>(4),
        ),
    ],
    chain: [
        (
            Idx::<InstanceChain>>(0),
            Idx::<InstanceDeclaration>>(0),
        ),
        (
            Idx::<InstanceChain>>(1),
            Idx::<InstanceDeclaration>>(1),
        ),
    ],
    instance: [
        (
            Idx::<InstanceDeclaration>>(0),
            Idx::<InstanceMemberStatement>>(0),
        ),
        (
            Idx::<InstanceDeclaration>>(1),
            Idx::<InstanceMemberStatement>>(1),
        ),
    ],
}
IndexingSource {
    export: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    import: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    data_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    data_equation: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataEquation,
                        range: 64..97,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataEquation,
                        range: 97..129,
                    },
                },
            ],
        },
        table: {
            Idx::<DataEquation>>(1),
            Idx::<DataEquation>>(0),
        },
    },
    data_constructor: AstPtrMap {
        arena: Arena {
            len: 6,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 80..87,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 89..97,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 112..119,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 121..129,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 145..152,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 167..174,
                    },
                },
            ],
        },
        table: {
            Idx::<DataConstructor>>(2),
            Idx::<DataConstructor>>(1),
            Idx::<DataConstructor>>(0),
            Idx::<DataConstructor>>(4),
            Idx::<DataConstructor>>(5),
            Idx::<DataConstructor>>(3),
        },
    },
    newtype_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    newtype_equation: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: NewtypeEquation,
                        range: 129..152,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: NewtypeEquation,
                        range: 152..174,
                    },
                },
            ],
        },
        table: {
            Idx::<NewtypeEquation>>(0),
            Idx::<NewtypeEquation>>(1),
        },
    },
    type_role: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_declaration: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ClassDeclaration,
                        range: 174..218,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ClassDeclaration,
                        range: 218..262,
                    },
                },
            ],
        },
        table: {
            Idx::<ClassDeclaration>>(0),
            Idx::<ClassDeclaration>>(1),
        },
    },
    class_member: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ClassMemberStatement,
                        range: 192..218,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ClassMemberStatement,
                        range: 236..262,
                    },
                },
            ],
        },
        table: {
            Idx::<ClassMemberStatement>>(1),
            Idx::<ClassMemberStatement>>(0),
        },
    },
    value_signature: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ValueSignature,
                        range: 17..41,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ValueSignature,
                        range: 41..64,
                    },
                },
            ],
        },
        table: {
            Idx::<ValueSignature>>(1),
            Idx::<ValueSignature>>(0),
        },
    },
    value_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    chain: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceChain,
                        range: 262..311,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceChain,
                        range: 311..360,
                    },
                },
            ],
        },
        table: {
            Idx::<InstanceChain>>(1),
            Idx::<InstanceChain>>(0),
        },
    },
    instance: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceDeclaration,
                        range: 262..311,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceDeclaration,
                        range: 311..360,
                    },
                },
            ],
        },
        table: {
            Idx::<InstanceDeclaration>>(0),
            Idx::<InstanceDeclaration>>(1),
        },
    },
    instance_member: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceEquationStatement,
                        range: 294..311,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceEquationStatement,
                        range: 343..360,
                    },
                },
            ],
        },
        table: {
            Idx::<InstanceMemberStatement>>(1),
            Idx::<InstanceMemberStatement>>(0),
        },
    },
    derive: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DeriveDeclaration,
                        range: 360..391,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DeriveDeclaration,
                        range: 391..421,
                    },
                },
            ],
        },
        table: {
            Idx::<DeriveDeclaration>>(1),
            Idx::<DeriveDeclaration>>(0),
        },
    },
    infix: AstPtrMap {
        arena: Arena {
            len: 4,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InfixDeclaration,
                        range: 545..563,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InfixDeclaration,
                        range: 563..580,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InfixDeclaration,
                        range: 580..605,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InfixDeclaration,
                        range: 605..629,
                    },
                },
            ],
        },
        table: {
            Idx::<InfixDeclaration>>(2),
            Idx::<InfixDeclaration>>(0),
            Idx::<InfixDeclaration>>(1),
            Idx::<InfixDeclaration>>(3),
        },
    },
    foreign_data: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ForeignImportDataDeclaration,
                        range: 478..512,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ForeignImportDataDeclaration,
                        range: 512..545,
                    },
                },
            ],
        },
        table: {
            Idx::<ForeignImportDataDeclaration>>(0),
            Idx::<ForeignImportDataDeclaration>>(1),
        },
    },
    foreign_value: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ForeignImportValueDeclaration,
                        range: 421..450,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ForeignImportValueDeclaration,
                        range: 450..478,
                    },
                },
            ],
        },
        table: {
            Idx::<ForeignImportValueDeclaration>>(1),
            Idx::<ForeignImportValueDeclaration>>(0),
        },
    },
}
[
    DuplicateItem {
        kind: ValueSignature(
            Idx::<ValueSignature>>(1),
        ),
        existing: Term(
            Idx::<TermItem>(0),
        ),
    },
    DuplicateItem {
        kind: DataEquation(
            Idx::<DataEquation>>(1),
        ),
        existing: Type(
            Idx::<TypeItem>(0),
        ),
    },
    DuplicateItem {
        kind: Constructor(
            Idx::<DataConstructor>>(2),
        ),
        existing: Term(
            Idx::<TermItem>(1),
        ),
    },
    DuplicateItem {
        kind: Constructor(
            Idx::<DataConstructor>>(3),
        ),
        existing: Term(
            Idx::<TermItem>(2),
        ),
    },
    DuplicateItem {
        kind: NewtypeEquation(
            Idx::<NewtypeEquation>>(1),
        ),
        existing: Type(
            Idx::<TypeItem>(1),
        ),
    },
    DuplicateItem {
        kind: Constructor(
            Idx::<DataConstructor>>(5),
        ),
        existing: Term(
            Idx::<TermItem>(3),
        ),
    },
    DuplicateItem {
        kind: ClassDeclaration(
            Idx::<ClassDeclaration>>(1),
        ),
        existing: Type(
            Idx::<TypeItem>(2),
        ),
    },
    DuplicateItem {
        kind: ClassMember(
            Idx::<ClassMemberStatement>>(1),
        ),
        existing: Term(
            Idx::<TermItem>(4),
        ),
    },
    DuplicateItem {
        kind: ForeignValue(
            Idx::<ForeignImportValueDeclaration>>(1),
        ),
        existing: Term(
            Idx::<TermItem>(9),
        ),
    },
    DuplicateItem {
        kind: ForeignData(
            Idx::<ForeignImportDataDeclaration>>(1),
        ),
        existing: Type(
            Idx::<TypeItem>(3),
        ),
    },
    DuplicateItem {
        kind: Operator(
            Idx::<InfixDeclaration>>(1),
        ),
        existing: Term(
            Idx::<TermItem>(10),
        ),
    },
    DuplicateItem {
        kind: Operator(
            Idx::<InfixDeclaration>>(3),
        ),
        existing: Type(
            Idx::<TypeItem>(4),
        ),
    },
]
