---
source: crates/indexing/tests/indexing.rs
expression: snapshot
snapshot_kind: text
---
Index {
    has_exports: true,
    term_item: Arena {
        len: 0,
        data: [],
    },
    type_item: Arena {
        len: 0,
        data: [],
    },
    term_export: {},
    type_export: {},
    import_items: {
        Idx::<ImportStatement>>(0): ImportItems {
            name: Some(
                "Implicit",
            ),
            alias: None,
            kind: Implicit,
            terms: {},
            types: {},
        },
        Idx::<ImportStatement>>(1): ImportItems {
            name: Some(
                "Explicit",
            ),
            alias: None,
            kind: Explicit,
            terms: {
                "explicit": Idx::<ImportItem>>(0),
            },
            types: {},
        },
    },
    term_nominal: {},
    type_nominal: {},
}
Relational {
    data: [],
    class: [],
    chain: [],
    instance: [],
}
IndexingSource {
    export: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ExportModule,
                        range: 13..28,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ExportModule,
                        range: 29..45,
                    },
                },
            ],
        },
        table: {
            Idx::<ExportItem>>(0),
            Idx::<ExportItem>>(1),
        },
    },
    import: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ImportValue,
                        range: 87..95,
                    },
                },
            ],
        },
        table: {
            Idx::<ImportItem>>(0),
        },
    },
    import_statement: AstPtrMap {
        arena: Arena {
            len: 2,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ImportStatement,
                        range: 52..69,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ImportStatement,
                        range: 69..96,
                    },
                },
            ],
        },
        table: {
            Idx::<ImportStatement>>(0),
            Idx::<ImportStatement>>(1),
        },
    },
    data_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    data_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    data_constructor: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    newtype_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    newtype_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_role: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_declaration: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_member: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    value_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    value_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    chain: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    instance: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    instance_member: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    derive: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    infix: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    foreign_data: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    foreign_value: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
}
[]
