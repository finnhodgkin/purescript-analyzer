---
source: crates/indexing/tests/indexing.rs
expression: snapshot
snapshot_kind: text
---
Index {
    term_item: Arena {
        len: 4,
        data: [
            Instance {
                id: Idx::<InstanceDeclaration>>(0),
            },
            Constructor {
                id: Idx::<DataConstructor>>(0),
            },
            Constructor {
                id: Idx::<DataConstructor>>(1),
            },
            Constructor {
                id: Idx::<DataConstructor>>(2),
            },
        ],
    },
    type_item: Arena {
        len: 6,
        data: [
            Data {
                signature: Some(
                    Idx::<DataSignature>>(0),
                ),
                equation: None,
                role: None,
            },
            Data {
                signature: Some(
                    Idx::<DataSignature>>(2),
                ),
                equation: Some(
                    Idx::<DataEquation>>(0),
                ),
                role: None,
            },
            Data {
                signature: Some(
                    Idx::<DataSignature>>(3),
                ),
                equation: None,
                role: None,
            },
            Data {
                signature: None,
                equation: Some(
                    Idx::<DataEquation>>(1),
                ),
                role: None,
            },
            Data {
                signature: None,
                equation: Some(
                    Idx::<DataEquation>>(2),
                ),
                role: Some(
                    Idx::<TypeRoleDeclaration>>(1),
                ),
            },
            Synonym {
                signature: None,
                equation: Some(
                    Idx::<TypeSynonymEquation>>(0),
                ),
            },
        ],
    },
    term_export: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<indexing::index::TermItem>>,
    },
    type_export: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<indexing::index::TypeItem>>,
    },
    import_nominal: {},
    term_nominal: {
        "DiffDecl": Idx::<TermItem>(2),
        "LateData": Idx::<TermItem>(1),
        "DiffDecl'": Idx::<TermItem>(3),
        "eqInt": Idx::<TermItem>(0),
    },
    type_nominal: {
        "SameData": Idx::<TypeItem>(0),
        "LateData": Idx::<TypeItem>(1),
        "DiffDecl": Idx::<TypeItem>(3),
        "NotSupported": Idx::<TypeItem>(5),
        "DiffSig": Idx::<TypeItem>(2),
        "Phantom": Idx::<TypeItem>(4),
    },
}
Relational {
    data: [
        (
            Idx::<TypeItem>(1),
            Idx::<TermItem>(1),
        ),
        (
            Idx::<TypeItem>(3),
            Idx::<TermItem>(2),
        ),
        (
            Idx::<TypeItem>(3),
            Idx::<TermItem>(3),
        ),
    ],
    class: [],
    chain: [
        (
            Idx::<InstanceChain>>(0),
            Idx::<InstanceDeclaration>>(0),
        ),
    ],
    instance: [],
}
IndexingSource {
    export: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    import: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    data_signature: AstPtrMap {
        arena: Arena {
            len: 4,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataSignature,
                        range: 64..87,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataSignature,
                        range: 87..109,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataSignature,
                        range: 135..157,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataSignature,
                        range: 157..179,
                    },
                },
            ],
        },
        table: {
            Idx::<DataSignature>>(1),
            Idx::<DataSignature>>(2),
            Idx::<DataSignature>>(3),
            Idx::<DataSignature>>(0),
        },
    },
    data_equation: AstPtrMap {
        arena: Arena {
            len: 3,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataEquation,
                        range: 109..135,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataEquation,
                        range: 203..229,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataEquation,
                        range: 287..303,
                    },
                },
            ],
        },
        table: {
            Idx::<DataEquation>>(1),
            Idx::<DataEquation>>(0),
            Idx::<DataEquation>>(2),
        },
    },
    data_constructor: AstPtrMap {
        arena: Arena {
            len: 3,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 126..135,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 220..229,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: DataConstructor,
                        range: 248..258,
                    },
                },
            ],
        },
        table: {
            Idx::<DataConstructor>>(0),
            Idx::<DataConstructor>>(2),
            Idx::<DataConstructor>>(1),
        },
    },
    newtype_signature: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: NewtypeSignature,
                        range: 179..203,
                    },
                },
            ],
        },
        table: {
            Idx::<NewtypeSignature>>(0),
        },
    },
    newtype_equation: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: NewtypeEquation,
                        range: 229..258,
                    },
                },
            ],
        },
        table: {
            Idx::<NewtypeEquation>>(0),
        },
    },
    type_role: AstPtrMap {
        arena: Arena {
            len: 4,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: TypeRoleDeclaration,
                        range: 258..287,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: TypeRoleDeclaration,
                        range: 303..330,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: TypeRoleDeclaration,
                        range: 330..356,
                    },
                },
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: TypeRoleDeclaration,
                        range: 377..408,
                    },
                },
            ],
        },
        table: {
            Idx::<TypeRoleDeclaration>>(2),
            Idx::<TypeRoleDeclaration>>(0),
            Idx::<TypeRoleDeclaration>>(1),
            Idx::<TypeRoleDeclaration>>(3),
        },
    },
    type_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    type_equation: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: TypeSynonymEquation,
                        range: 356..377,
                    },
                },
            ],
        },
        table: {
            Idx::<TypeSynonymEquation>>(0),
        },
    },
    class_signature: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_declaration: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    class_member: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    value_signature: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: ValueSignature,
                        range: 43..64,
                    },
                },
            ],
        },
        table: {
            Idx::<ValueSignature>>(0),
        },
    },
    value_equation: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    chain: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceChain,
                        range: 17..43,
                    },
                },
            ],
        },
        table: {
            Idx::<InstanceChain>>(0),
        },
    },
    instance: AstPtrMap {
        arena: Arena {
            len: 1,
            data: [
                AstPtr {
                    raw: SyntaxNodePtr {
                        kind: InstanceDeclaration,
                        range: 17..43,
                    },
                },
            ],
        },
        table: {
            Idx::<InstanceDeclaration>>(0),
        },
    },
    instance_member: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    derive: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    infix: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    foreign_data: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
    foreign_value: AstPtrMap {
        arena: Arena {
            len: 0,
            data: [],
        },
        table: {},
    },
}
[
    MismatchedItem {
        kind: ValueSignature(
            Idx::<ValueSignature>>(0),
        ),
        existing: Term(
            Idx::<TermItem>(0),
        ),
    },
    DuplicateItem {
        kind: DataSignature(
            Idx::<DataSignature>>(1),
        ),
        existing: Type(
            Idx::<TypeItem>(0),
        ),
    },
    MismatchedItem {
        kind: NewtypeSignature(
            Idx::<NewtypeSignature>>(0),
        ),
        existing: Type(
            Idx::<TypeItem>(2),
        ),
    },
    MismatchedItem {
        kind: NewtypeEquation(
            Idx::<NewtypeEquation>>(0),
        ),
        existing: Type(
            Idx::<TypeItem>(3),
        ),
    },
    InvalidRole {
        id: Idx::<TypeRoleDeclaration>>(0),
        existing: None,
    },
    InvalidRole {
        id: Idx::<TypeRoleDeclaration>>(2),
        existing: Some(
            Idx::<TypeItem>(4),
        ),
    },
    InvalidRole {
        id: Idx::<TypeRoleDeclaration>>(3),
        existing: None,
    },
]
