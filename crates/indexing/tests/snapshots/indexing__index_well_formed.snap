---
source: crates/indexing/tests/indexing.rs
expression: snapshot
snapshot_kind: text
---
Index {
    term_item: Arena {
        len: 10,
        data: [
            Value {
                signature: Some(
                    Idx::<ValueSignature>>(0),
                ),
                equations: [
                    Idx::<ValueEquation>>(0),
                ],
            },
            Constructor {
                id: Idx::<DataConstructor>>(0),
            },
            Constructor {
                id: Idx::<DataConstructor>>(1),
            },
            Constructor {
                id: Idx::<DataConstructor>>(2),
            },
            ClassMember {
                id: Idx::<ClassMemberStatement>>(0),
            },
            Instance {
                id: Idx::<InstanceDeclaration>>(0),
            },
            Instance {
                id: Idx::<InstanceDeclaration>>(1),
            },
            Derive {
                id: Idx::<DeriveDeclaration>>(0),
            },
            Foreign {
                id: Idx::<ForeignImportValueDeclaration>>(0),
            },
            Operator {
                id: Idx::<InfixDeclaration>>(0),
            },
        ],
    },
    type_item: Arena {
        len: 6,
        data: [
            Data {
                signature: Some(
                    Idx::<DataSignature>>(0),
                ),
                equation: Some(
                    Idx::<DataEquation>>(0),
                ),
                role: None,
            },
            Newtype {
                signature: Some(
                    Idx::<NewtypeSignature>>(0),
                ),
                equation: Some(
                    Idx::<NewtypeEquation>>(0),
                ),
                role: Some(
                    Idx::<TypeRoleDeclaration>>(0),
                ),
            },
            Synonym {
                signature: Some(
                    Idx::<TypeSynonymSignature>>(0),
                ),
                equation: Some(
                    Idx::<TypeSynonymEquation>>(0),
                ),
            },
            Class {
                signature: Some(
                    Idx::<ClassSignature>>(0),
                ),
                declaration: Some(
                    Idx::<ClassDeclaration>>(0),
                ),
            },
            Foreign {
                id: Idx::<ForeignImportDataDeclaration>>(0),
            },
            Operator {
                id: Idx::<InfixDeclaration>>(1),
            },
        ],
    },
    term_export: ArenaMap {
        v: [
            Some(
                Idx::<ExportItem>>(0),
            ),
            Some(
                Idx::<ExportItem>>(3),
            ),
            Some(
                Idx::<ExportItem>>(3),
            ),
            Some(
                Idx::<ExportItem>>(4),
            ),
            None,
            None,
            None,
            None,
            Some(
                Idx::<ExportItem>>(1),
            ),
            Some(
                Idx::<ExportItem>>(7),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<indexing::index::TermItem>>,
    },
    type_export: ArenaMap {
        v: [
            Some(
                Idx::<ExportItem>>(3),
            ),
            Some(
                Idx::<ExportItem>>(4),
            ),
            Some(
                Idx::<ExportItem>>(5),
            ),
            Some(
                Idx::<ExportItem>>(2),
            ),
            Some(
                Idx::<ExportItem>>(6),
            ),
            Some(
                Idx::<ExportItem>>(8),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<indexing::index::TypeItem>>,
    },
    import_nominal: {
        "Exports": [
            Idx::<ImportStatement>>(2),
            Idx::<ImportStatement>>(3),
        ],
        "List": [
            Idx::<ImportStatement>>(1),
        ],
    },
    term_nominal: {
        "+": Idx::<TermItem>(9),
        "unit": Idx::<TermItem>(8),
        "eqId": Idx::<TermItem>(7),
        "eq": Idx::<TermItem>(4),
        "id": Idx::<TermItem>(0),
        "Just": Idx::<TermItem>(1),
        "Id": Idx::<TermItem>(3),
        "Nothing": Idx::<TermItem>(2),
        "eqInt": Idx::<TermItem>(5),
    },
    type_nominal: {
        "MaybeId": Idx::<TypeItem>(2),
        "Unit": Idx::<TypeItem>(4),
        "Id": Idx::<TypeItem>(1),
        "Eq": Idx::<TypeItem>(3),
        "Maybe": Idx::<TypeItem>(0),
        "+": Idx::<TypeItem>(5),
    },
}
Relational {
    data: [
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(1),
        ),
        (
            Idx::<TypeItem>(0),
            Idx::<TermItem>(2),
        ),
        (
            Idx::<TypeItem>(1),
            Idx::<TermItem>(3),
        ),
    ],
    class: [
        (
            Idx::<TypeItem>(3),
            Idx::<TermItem>(4),
        ),
    ],
    chain: [
        (
            Idx::<InstanceChain>>(0),
            Idx::<InstanceDeclaration>>(0),
        ),
        (
            Idx::<InstanceChain>>(1),
            Idx::<InstanceDeclaration>>(1),
        ),
    ],
    instance: [
        (
            Idx::<InstanceDeclaration>>(0),
            Idx::<InstanceMemberStatement>>(0),
        ),
        (
            Idx::<InstanceDeclaration>>(1),
            Idx::<InstanceMemberStatement>>(1),
        ),
    ],
}
Source {
    export: Arena {
        len: 10,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportValue,
                    range: 13..15,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportValue,
                    range: 16..21,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportClass,
                    range: 22..31,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportType,
                    range: 32..42,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportType,
                    range: 43..50,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportType,
                    range: 51..59,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportType,
                    range: 60..65,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportOperator,
                    range: 66..70,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportTypeOperator,
                    range: 71..80,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ExportModule,
                    range: 81..96,
                },
            },
        ],
    },
    import: Arena {
        len: 4,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ImportStatement,
                    range: 103..119,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ImportStatement,
                    range: 119..144,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ImportStatement,
                    range: 144..171,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ImportStatement,
                    range: 171..198,
                },
            },
        ],
    },
    data_signature: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DataSignature,
                    range: 231..259,
                },
            },
        ],
    },
    data_equation: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DataEquation,
                    range: 259..291,
                },
            },
        ],
    },
    data_constructor: Arena {
        len: 3,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DataConstructor,
                    range: 274..281,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DataConstructor,
                    range: 283..291,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DataConstructor,
                    range: 334..341,
                },
            },
        ],
    },
    newtype_signature: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: NewtypeSignature,
                    range: 291..319,
                },
            },
        ],
    },
    newtype_equation: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: NewtypeEquation,
                    range: 319..341,
                },
            },
        ],
    },
    type_role: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: TypeRoleDeclaration,
                    range: 341..363,
                },
            },
        ],
    },
    type_signature: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: TypeSynonymSignature,
                    range: 363..385,
                },
            },
        ],
    },
    type_equation: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: TypeSynonymEquation,
                    range: 385..409,
                },
            },
        ],
    },
    class_signature: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ClassSignature,
                    range: 409..441,
                },
            },
        ],
    },
    class_declaration: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ClassDeclaration,
                    range: 441..484,
                },
            },
        ],
    },
    class_member: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ClassMemberStatement,
                    range: 458..484,
                },
            },
        ],
    },
    value_signature: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ValueSignature,
                    range: 198..222,
                },
            },
        ],
    },
    value_equation: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ValueEquation,
                    range: 222..231,
                },
            },
        ],
    },
    chain: Arena {
        len: 2,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceChain,
                    range: 484..533,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceChain,
                    range: 533..584,
                },
            },
        ],
    },
    instance: Arena {
        len: 2,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceDeclaration,
                    range: 484..533,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceDeclaration,
                    range: 533..584,
                },
            },
        ],
    },
    instance_member: Arena {
        len: 2,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceEquationStatement,
                    range: 516..533,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InstanceEquationStatement,
                    range: 557..584,
                },
            },
        ],
    },
    derive: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: DeriveDeclaration,
                    range: 584..615,
                },
            },
        ],
    },
    infix: Arena {
        len: 2,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InfixDeclaration,
                    range: 677..695,
                },
            },
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: InfixDeclaration,
                    range: 695..719,
                },
            },
        ],
    },
    foreign_data: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ForeignImportDataDeclaration,
                    range: 644..677,
                },
            },
        ],
    },
    foreign_value: Arena {
        len: 1,
        data: [
            AstPtr {
                raw: SyntaxNodePtr {
                    kind: ForeignImportValueDeclaration,
                    range: 615..644,
                },
            },
        ],
    },
}
[]
